name: Build and deploy .NET Core application to Web App UserServicePresentation20250718014607 with API Management Service UserServicePresentationapi-UserServicePresentation

on:
  push:
    branches:
      - ZhengTao/Backend

env:
  AZURE_WEBAPP_NAME: UserServicePresentation20250718014607
  AZURE_WEBAPP_PACKAGE_PATH: ./publish  # Fixed: Use a clean publish path
  AZURE_APIM_RESOURCE_PATH: /
  AZURE_APIM_RESOURCEGROUP: testresource
  AZURE_APIM_SERVICENAME: UserServicePresentationapi
  AZURE_APIM_API_ID: UserServicePresentation
  AZURE_APIM_APPSERVICEURL: https://userservicepresentation20250718014607-bteyguc4b5djgdav.canadacentral-01.azurewebsites.net
  SWASHBUCLE_ASPNET_CORE_CLI_PACKAGE_VERSION: 6.5.0
  SWASHBUCKLE_DOTNET_CORE_VERSION: 7.0.x
  API_IMPORT_SPECIFICATION_PATH: ./publish/swagger.json  # Fixed: Updated path
  API_IMPORT_DLL: UserService/UserService.Presentation/bin/Release/net8.0/UserService.Presentation.dll
  API_IMPORT_VERSION: v1
  CONFIGURATION: Release
  DOTNET_CORE_VERSION: 8.0.x
  WORKING_DIRECTORY: UserService/UserService.Presentation

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET 8 SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_CORE_VERSION }}

      - name: Setup .NET 7 runtime (for swagger CLI tool)
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.SWASHBUCKLE_DOTNET_CORE_VERSION }}

      - name: Restore
        run: dotnet restore ${{ env.WORKING_DIRECTORY }}

      - name: Build
        run: dotnet build ${{ env.WORKING_DIRECTORY }} --configuration ${{ env.CONFIGURATION }} --no-restore

      - name: Test
        run: dotnet test ${{ env.WORKING_DIRECTORY }} --no-build

      - name: Publish
        run: dotnet publish ${{ env.WORKING_DIRECTORY }} --configuration ${{ env.CONFIGURATION }} --no-build --output ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

      - name: Install Swashbuckle CLI .NET Global Tool
        run: dotnet tool install --global Swashbuckle.AspNetCore.Cli --version ${{ env.SWASHBUCLE_ASPNET_CORE_CLI_PACKAGE_VERSION }}

      - name: Generate OpenAPI Specification Document
        run: |
          swagger tofile \
            --output "${{ env.API_IMPORT_SPECIFICATION_PATH }}" \
            "${{ env.API_IMPORT_DLL }}" \
            "${{ env.API_IMPORT_VERSION }}"
        env:
          ASPNETCORE_ENVIRONMENT: swagger

      - name: Upload publish artifacts
        uses: actions/upload-artifact@v4
        with:
          name: webapp
          path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: webapp
          path: webapp

      # Add this step to clean up any potential conflicts
      - name: Clean deployment directory
        run: |
          cd webapp
          # Remove any conflicting directory structures
          find . -name "UserService.Presentation" -type d -exec rm -rf {} + 2>/dev/null || true
        shell: bash

      - name: Zip artifact contents
        run: |
          cd webapp
          zip -r ../webapp.zip .
        shell: bash

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.UserServicePresentationapi_SPN }}

      # Add cleanup step before deployment
      - name: Clean Azure WebApp directory
        run: |
          az webapp deployment source config-zip \
            --resource-group "${{ env.AZURE_APIM_RESOURCEGROUP }}" \
            --name "${{ env.AZURE_WEBAPP_NAME }}" \
            --src /dev/null || true
        continue-on-error: true

      - name: Deploy to Azure WebApp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          package: webapp.zip
          clean: true  # Added: Clean deployment

      - name: Import API into Azure API Management
        run: |
          az apim api import \
            --path "${{ env.AZURE_APIM_RESOURCE_PATH }}" \
            --resource-group "${{ env.AZURE_APIM_RESOURCEGROUP }}" \
            --service-name "${{ env.AZURE_APIM_SERVICENAME }}" \
            --api-id "${{ env.AZURE_APIM_API_ID }}" \
            --service-url "${{ env.AZURE_APIM_APPSERVICEURL }}" \
            --specification-path "${{ env.API_IMPORT_SPECIFICATION_PATH }}" \
            --specification-format OpenApi \
            --subscription-required false

      - name: Logout from Azure
        run: az logout