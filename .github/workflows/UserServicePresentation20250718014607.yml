name: Build and deploy .NET Core application to Web App UserServicePresentation20250718014607 with API Management Service UserServicePresentationapi-UserServicePresentation

on:
  push:
    branches:
      - ZhengTao/Backend

env:
  AZURE_WEBAPP_NAME: UserServicePresentation20250718014607
  AZURE_WEBAPP_PACKAGE_PATH: ./deploy-package
  AZURE_APIM_RESOURCE_PATH: /
  AZURE_APIM_RESOURCEGROUP: testresource
  AZURE_APIM_SERVICENAME: UserServicePresentationapi
  AZURE_APIM_API_ID: UserServicePresentation
  AZURE_APIM_APPSERVICEURL: https://userservicepresentation20250718014607-bteyguc4b5djgdav.canadacentral-01.azurewebsites.net
  SWASHBUCLE_ASPNET_CORE_CLI_PACKAGE_VERSION: 6.5.0
  SWASHBUCKLE_DOTNET_CORE_VERSION: 7.0.x
  API_IMPORT_SPECIFICATION_PATH: ./deploy-package/swagger.json
  API_IMPORT_DLL: ./deploy-package/UserService.Presentation.dll
  API_IMPORT_VERSION: v1
  CONFIGURATION: Release
  DOTNET_CORE_VERSION: 8.0.x
  WORKING_DIRECTORY: UserService/UserService.Presentation

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET 8 SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_CORE_VERSION }}

      - name: Setup .NET 7 runtime (for swagger CLI tool)
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.SWASHBUCKLE_DOTNET_CORE_VERSION }}

      - name: Restore
        run: dotnet restore ${{ env.WORKING_DIRECTORY }}

      - name: Build
        run: dotnet build ${{ env.WORKING_DIRECTORY }} --configuration ${{ env.CONFIGURATION }} --no-restore

      - name: Test
        run: dotnet test ${{ env.WORKING_DIRECTORY }} --no-build

      - name: Create clean deployment directory
        run: |
          mkdir -p ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
          echo "Created deployment directory"

      - name: Publish application
        run: |
          dotnet publish ${{ env.WORKING_DIRECTORY }} --configuration ${{ env.CONFIGURATION }} --no-build --output ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
          echo "Published to deployment package"
        env:
          ASPNETCORE_ENVIRONMENT: Production

      - name: Install Swashbuckle CLI .NET Global Tool
        run: dotnet tool install --global Swashbuckle.AspNetCore.Cli --version ${{ env.SWASHBUCLE_ASPNET_CORE_CLI_PACKAGE_VERSION }}

      - name: Generate OpenAPI Specification Document
        run: |
          swagger tofile \
            --output "${{ env.API_IMPORT_SPECIFICATION_PATH }}" \
            "${{ env.API_IMPORT_DLL }}" \
            "${{ env.API_IMPORT_VERSION }}"
        env:
          ASPNETCORE_ENVIRONMENT: swagger

      - name: Verify deployment package
        run: |
          echo "Deployment package contents:"
          ls -la ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

      - name: Upload publish artifacts
        uses: actions/upload-artifact@v4
        with:
          name: webapp
          path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: webapp
          path: webapp

      - name: Verify deployment package
        run: |
          echo "Deployment package contents:"
          ls -la webapp/
          echo "Checking for essential files:"
          ls -la webapp/*.dll || echo "No DLL files found"
          ls -la webapp/*.json || echo "No JSON files found"

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.UserServicePresentationapi_SPN }}

      - name: Set Azure App Service Environment
        run: |
          az webapp config appsettings set \
            --name "${{ env.AZURE_WEBAPP_NAME }}" \
            --resource-group "${{ env.AZURE_APIM_RESOURCEGROUP }}" \
            --settings "ASPNETCORE_ENVIRONMENT=Production"

      - name: Deploy to Azure Web App
        run: |
          az webapp deployment source config-zip \
            --resource-group "${{ env.AZURE_APIM_RESOURCEGROUP }}" \
            --name "${{ env.AZURE_WEBAPP_NAME }}" \
            --src webapp \
            --build-remote false

      - name: Wait for deployment to complete
        run: |
          echo "Waiting for deployment to stabilize..."
          sleep 30

      - name: Test deployment
        run: |
          echo "Testing if app is running..."
          curl -f "${{ env.AZURE_APIM_APPSERVICEURL }}/health" || echo "Health check failed or endpoint not available"

      - name: Import API into Azure API Management
        run: |
          az apim api import \
            --path "${{ env.AZURE_APIM_RESOURCE_PATH }}" \
            --resource-group "${{ env.AZURE_APIM_RESOURCEGROUP }}" \
            --service-name "${{ env.AZURE_APIM_SERVICENAME }}" \
            --api-id "${{ env.AZURE_APIM_API_ID }}" \
            --service-url "${{ env.AZURE_APIM_APPSERVICEURL }}" \
            --specification-path "swagger.json" \
            --specification-format OpenApi \
            --subscription-required false

      - name: Logout from Azure
        run: az logout